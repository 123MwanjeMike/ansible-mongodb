var config = {
    _id: "{{ replica_set_name }}",
    version: 1,
    protocolVersion: 1,
    members: [],
    settings: {
        chainingAllowed: true,
        heartbeatIntervalMillis: 2000,
        heartbeatTimeoutSecs: 10,
        electionTimeoutMillis: 10000,
        getLastErrorModes: {},
        getLastErrorDefaults: {w: 1, wtimeout: 0}
    }
};

{% if cluster_role == 'configsvr' %}
// Set this to specify the replica set is a config server
config.configsvr = true;
{% endif %}

{% if cluster_role == 'shardsvr' %}
// Set this to specify the replica set is a config server
{% endif %}

{% for hn in rs_server_group %}
config.members.push({_id: {{loop.index0}}, host: '{{ hostvars[ hn ].server_fqdn }}:{{ rs_port }}'});
{% endfor %}

rs.initiate(config);

{% if admin_password != "" %}
// Create the user administrator and cluster administrator
db.getSiblingDB("{{ auth_db }}").createUser({
    user: "{{ admin_user }}",
    pwd: "{{ admin_password }}",
    roles: [
        { role: "root", db: "{{ auth_db }}"},
        { role: "dbAdminAnyDatabase", db: "{{ auth_db }}"},
        { role: "userAdminAnyDatabase", db: "{{ auth_db }}"},
        { role: "readWriteAnyDatabase", db: "{{ auth_db }}"},
        { role: "clusterAdmin", db: "{{ auth_db }}"},
        { role: "clusterMonitor", db: "{{ auth_db }}"}
    ]
})
{% endif %}
