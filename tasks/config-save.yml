---

  - name: Stop services
    include: service-stop.yml

#  - name: Enable mongod service, if needed
#    become: true
#    service: name=mongod enabled=yes
#    when:
#      - stat_d.stat.exists
#      - mongodb_type == "daemon"
#
##  - name: Disable mongod service, if needed
##    become: true
##    service: name=mongod enabled=no
##    when:
##      - stat_d.stat.exists
##      - mongodb_type == "shard"
##

  - name: Enable mongos service, if needed
    become: true
    service: name=mongos enabled=yes
    when: mongodb_type == "shard"

  - name: Copying daemon system file templates
    become: true
    template: src={{ item.src }} dest={{ item.dest }} owner=root group=root mode="u=rw,g=r,o=r"
    with_items:
      - { src: ../templates/mongod.service.j2, dest: /lib/systemd/system/mongod.service }
      - { src: ../templates/mongod.conf.j2, dest: /etc/mongod.conf }
    when: mongodb_type == "daemon"

  - name: Remove daemon system files when n/a
    become: true
    file: dest={{ item.dest }} state=absent
    with_items:
      - { dest: /lib/systemd/system/mongod.service }
      - { dest: /etc/mongod.conf }
    when: mongodb_type == "shard"

  - name: Copying shard templates, if needed
    become: true
    template: src={{ item.src }} dest={{ item.dest }} owner=root group=root mode="u=rw,g=r,o=r"
    with_items:
      - { src: ../templates/mongos.service.j2, dest: /lib/systemd/system/mongos.service }
      - { src: ../templates/mongos.conf.j2, dest: /etc/mongos.conf }
    when: mongodb_type == "shard"

  - name: Truncate logs
    become: true
    file: path={{ item }} state=absent  # state=empty
    with_items:
      - /var/log/mongodb/mongod.log
      - /var/log/mongodb/mongos.log

  - name: Reset directories
    include: directories-init.yml
    no_log: true

  - name: Start the appropriate services
    include: service-start.yml

