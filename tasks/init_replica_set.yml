---
- name: Create storage_path directory and set ownership
  file:
    path: "{{ storage_path }}"
    state: directory
    owner: mongodb
    group: mongodb
    mode: 0755

- name: Copy mongo keyfile
  copy:
    src: "{{ keyfile_src }}"
    dest: "{{ keyfile_path }}"
    owner: mongodb
    group: mongodb        
    mode: 0400

- name: Configuring the replica set
  set_fact:
    configuring_replica_set: true

- name: Upload init_replica_set config file
  template:
    src: templates/mongod.conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: Save the init_replica_set.js template to remote tmp
  template:
    src: templates/replica_set_init.js.j2
    dest: /tmp/replica_set_init.js

- name: Start the appropriate services
  include_tasks: service_start.yml

- name: Wait for services to start
  pause:
    seconds: 5

- name: Run the init_replica_set.js script
  shell: mongosh --port {{ rs_port }} < /tmp/replica_set_init.js > {{ log_path }}/rs_init.log
  register: res_rsi
  until: res_rsi.rc == 0
  retries: 3
  delay: 5
  delegate_to: "{{ groups[replica_set.group] | first }}"
  args:
    creates: "{{ log_path }}/rs_init.log"

- name: Remove the init_replica_set.js script from remote tmp
  file:
    dest: /tmp/replica_set_init.js
    state: absent

- name: No longer configuring the replica set
  set_fact:
    configuring_replica_set: false

- name: Restore the mongodb configuration
  template:
    src: templates/mongod.conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r